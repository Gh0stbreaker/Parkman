@page "/register"
@using System.Net.Http.Json
@using System.ComponentModel.DataAnnotations

<h3 class="text-2xl font-bold mb-4 text-center text-headline">Register</h3>

<div class="flex justify-center space-x-4 mb-4">
    <button class="px-4 py-2 rounded-lg shadow-md focus:outline-none @(registerAsCompany ? "bg-secondary" : "bg-highlight text-white")" @onclick="() => registerAsCompany = false">Person</button>
    <button class="px-4 py-2 rounded-lg shadow-md focus:outline-none @(registerAsCompany ? "bg-highlight text-white" : "bg-secondary")" @onclick="() => registerAsCompany = true">Company</button>
</div>

@if (registerAsCompany)
{
    <EditForm Model="_companyModel" OnValidSubmit="RegisterCompany" class="max-w-3xl mx-auto bg-main p-6 rounded-xl shadow-md">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <h4 class="text-xl font-semibold mt-6 mb-4 text-headline border-b border-muted pb-1">Account Information</h4>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-envelope mr-1"></i>
                    Email
                </label>
                <InputText @bind-Value="_companyModel.Email" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <ValidationMessage For="@(() => _companyModel.Email)" class="text-red-500 text-sm mt-1" />
            </div>
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-lock mr-1"></i>
                    Password
                </label>
                <div class="flex items-center">
                    <InputText @bind-Value="_companyModel.Password" type="@(showPassword ? "text" : "password")" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                    <button type="button" class="ml-2 text-sm text-paragraph" @onclick="() => showPassword = !showPassword">@(showPassword ? "Hide" : "Show")</button>
                </div>
                <ValidationMessage For="@(() => _companyModel.Password)" class="text-red-500 text-sm mt-1" />
            </div>
            <div class="md:col-span-2">
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-lock mr-1"></i>
                    Confirm Password
                </label>
                <InputText @bind-Value="_companyModel.ConfirmPassword" type="@(showPassword ? "text" : "password")" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <ValidationMessage For="@(() => _companyModel.ConfirmPassword)" class="text-red-500 text-sm mt-1" />
            </div>
        </div>

        <h4 class="text-xl font-semibold mt-6 mb-4 text-headline border-b border-muted pb-1">Company Details</h4>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-building mr-1"></i>
                    Company Name
                </label>
                <InputText @bind-Value="_companyModel.CompanyName" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <ValidationMessage For="@(() => _companyModel.CompanyName)" class="text-red-500 text-sm mt-1" />
            </div>
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-id-card mr-1"></i>
                    IČO
                </label>
                <InputText @bind-Value="_companyModel.Ico" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <ValidationMessage For="@(() => _companyModel.Ico)" class="text-red-500 text-sm mt-1" />
            </div>
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-file-invoice mr-1"></i>
                    DIČ
                </label>
                <InputText @bind-Value="_companyModel.Dic" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <ValidationMessage For="@(() => _companyModel.Dic)" class="text-red-500 text-sm mt-1" />
            </div>
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-user mr-1"></i>
                    Contact Name
                </label>
                <InputText @bind-Value="_companyModel.ContactPersonName" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <ValidationMessage For="@(() => _companyModel.ContactPersonName)" class="text-red-500 text-sm mt-1" />
            </div>
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-envelope mr-1"></i>
                    Contact Email
                </label>
                <InputText @bind-Value="_companyModel.ContactEmail" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <ValidationMessage For="@(() => _companyModel.ContactEmail)" class="text-red-500 text-sm mt-1" />
            </div>
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-phone mr-1"></i>
                    Phone Number
                </label>
                <InputText @bind-Value="_companyModel.PhoneNumber" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <ValidationMessage For="@(() => _companyModel.PhoneNumber)" class="text-red-500 text-sm mt-1" />
            </div>
            <div class="md:col-span-2">
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-home mr-1"></i>
                    Billing Address
                </label>
                <InputText @bind-Value="_companyModel.BillingAddress" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <ValidationMessage For="@(() => _companyModel.BillingAddress)" class="text-red-500 text-sm mt-1" />
            </div>
        </div>

        <h4 class="text-xl font-semibold mt-6 mb-4 text-headline border-b border-muted pb-1">Vehicle Information</h4>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-car mr-1"></i>
                    License Plate
                </label>
                <InputText @bind-Value="_companyModel.LicensePlate" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <ValidationMessage For="@(() => _companyModel.LicensePlate)" class="text-red-500 text-sm mt-1" />
            </div>
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-car-side mr-1"></i>
                    Brand
                </label>
                <InputSelect @bind-Value="_companyModel.Brand" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none">
                    <option value="">Select brand</option>
                    @foreach (var brand in VehicleBrands)
                    {
                        <option value="@brand">@brand</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => _companyModel.Brand)" class="text-red-500 text-sm mt-1" />
            </div>
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-tag mr-1"></i>
                    Type
                </label>
                <InputSelect @bind-Value="_companyModel.Type" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none">
                    <option value="">Select type</option>
                    @foreach (var type in VehicleTypes)
                    {
                        <option value="@type">@type</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => _companyModel.Type)" class="text-red-500 text-sm mt-1" />
            </div>
            <div>
                <label class="block text-sm font-medium text-headline">
                    <i class="fas fa-gas-pump mr-1"></i>
                    Propulsion Type
                </label>
                <InputSelect @bind-Value="_companyModel.PropulsionType" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none">
                    <option value="">Select propulsion</option>
                    @foreach (var propulsion in VehiclePropulsionTypes)
                    {
                        <option value="@propulsion">@propulsion</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => _companyModel.PropulsionType)" class="text-red-500 text-sm mt-1" />
            </div>
        </div>

        <div class="flex items-center mt-6 mb-6">
            <InputCheckbox @bind-Value="_companyModel.Shareable" class="h-4 w-4 text-highlight border-stroke rounded" />
            <label class="ml-2 block text-sm text-headline">Shareable</label>
        </div>

        <button type="submit" class="w-full bg-highlight text-white font-semibold py-2 px-4 rounded-lg shadow-md hover:bg-tertiary transition duration-200 disabled:opacity-50" disabled="@isSubmitting">
            @(isSubmitting ? "Registering..." : "Register")
        </button>

        @if (successMessage != null)
        {
            <p class="text-green-600 text-center mt-4">@successMessage</p>
        }
    </EditForm>
}
else
{
    <EditForm Model="_model" OnValidSubmit="RegisterUser" class="max-w-3xl mx-auto bg-main p-6 rounded-xl shadow-md">
        <DataAnnotationsValidator />
        <ValidationSummary />

    <!-- Úèetní údaje -->
    <h4 class="text-xl font-semibold mt-6 mb-4 text-headline border-b border-muted pb-1">Account Information</h4>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-envelope mr-1"></i>
                Email
            </label>
            <InputText @bind-Value="_model.Email" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.Email)" class="text-red-500 text-sm mt-1" />
        </div>

        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-lock mr-1"></i>
                Password
            </label>
            <div class="flex items-center">
                <InputText @bind-Value="_model.Password" type="@(showPassword ? "text" : "password")" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <button type="button" class="ml-2 text-sm text-paragraph" @onclick="() => showPassword = !showPassword">@(showPassword ? "Hide" : "Show")</button>
            </div>
            <ValidationMessage For="@(() => _model.Password)" class="text-red-500 text-sm mt-1" />
        </div>

        <div class="md:col-span-2">
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-lock mr-1"></i>
                Confirm Password
            </label>
            <InputText @bind-Value="_model.ConfirmPassword" type="@(showPassword ? "text" : "password")" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.ConfirmPassword)" class="text-red-500 text-sm mt-1" />
        </div>
    </div>

    <!-- Osobní údaje -->
    <h4 class="text-xl font-semibold mt-6 mb-4 text-headline border-b border-muted pb-1">Personal Details</h4>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-user mr-1"></i>
                First Name
            </label>
            <InputText @bind-Value="_model.FirstName" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.FirstName)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-user mr-1"></i>
                Last Name
            </label>
            <InputText @bind-Value="_model.LastName" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.LastName)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-calendar-alt mr-1"></i>
                Date of Birth
            </label>
            <InputDate @bind-Value="_model.DateOfBirth" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.DateOfBirth)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-phone mr-1"></i>
                Phone Number
            </label>
            <InputText @bind-Value="_model.PhoneNumber" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.PhoneNumber)" class="text-red-500 text-sm mt-1" />
        </div>
        <div class="md:col-span-2">
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-home mr-1"></i>
                Address
            </label>
            <InputText @bind-Value="_model.Address" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.Address)" class="text-red-500 text-sm mt-1" />
        </div>
    </div>

    <!-- Vozidlo -->
    <h4 class="text-xl font-semibold mt-6 mb-4 text-headline border-b border-muted pb-1">Vehicle Information</h4>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-car mr-1"></i>
                License Plate
            </label>
            <InputText @bind-Value="_model.LicensePlate" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.LicensePlate)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-car-side mr-1"></i>
                Brand
            </label>
            <InputSelect @bind-Value="_model.Brand" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none">
                <option value="">Select brand</option>
                @foreach (var brand in VehicleBrands)
                {
                    <option value="@brand">@brand</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _model.Brand)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-tag mr-1"></i>
                Type
            </label>
            <InputSelect @bind-Value="_model.Type" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none">
                <option value="">Select type</option>
                @foreach (var type in VehicleTypes)
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _model.Type)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-gas-pump mr-1"></i>
                Propulsion Type
            </label>
            <InputSelect @bind-Value="_model.PropulsionType" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none">
                <option value="">Select propulsion</option>
                @foreach (var propulsion in VehiclePropulsionTypes)
                {
                    <option value="@propulsion">@propulsion</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _model.PropulsionType)" class="text-red-500 text-sm mt-1" />
        </div>
    </div>

    <!-- Shareable -->
    <div class="flex items-center mt-6 mb-6">
        <InputCheckbox @bind-Value="_model.Shareable" class="h-4 w-4 text-highlight border-stroke rounded" />
        <label class="ml-2 block text-sm text-headline">Shareable</label>
    </div>

    <!-- Submit -->
    <button type="submit" class="w-full bg-highlight text-white font-semibold py-2 px-4 rounded-lg shadow-md hover:bg-tertiary transition duration-200 disabled:opacity-50" disabled="@isSubmitting">
        @(isSubmitting ? "Registering..." : "Register")
    </button>

    @if (successMessage != null)
    {
        <p class="text-green-600 text-center mt-4">@successMessage</p>
    }
</EditForm>
}

@code {
    private RegisterWithVehicleRequest _model = new();
    private RegisterCompanyFormModel _companyModel = new();
    private bool registerAsCompany;
    private bool showPassword;
    private bool isSubmitting;
    private string? successMessage;

    private readonly string[] VehicleBrands = new[]
    {
        "Tesla", "Ford", "Chevrolet", "Chrysler", "Dodge", "Jeep", "Cadillac",
        "GMC", "Lincoln", "Buick", "Hummer", "Ram", "Bmw", "MercedesBenz",
        "Audi", "Volkswagen", "Porsche", "Opel", "Smart", "Maybach", "Peugeot",
        "Citroen", "Renault", "DS", "Fiat", "AlfaRomeo", "Lancia", "Ferrari",
        "Lamborghini", "Maserati", "Pagani", "Iveco", "Jaguar", "LandRover",
        "AstonMartin", "Bentley", "RollsRoyce", "Mini", "Lotus", "MG",
        "Vauxhall", "Rover", "Seat", "Cupra", "Skoda", "Volvo", "Saab",
        "Koenigsegg", "Spyker", "DAF", "Dacia", "Rinspeed", "MagyarSuzuki",
        "Rimac", "Toyota", "Honda", "Nissan", "Mazda", "Subaru", "Suzuki",
        "Mitsubishi", "Lexus", "Infiniti", "Daihatsu", "Acura", "Hyundai",
        "Kia", "Genesis", "SsangYong", "Geely", "Chery", "BYD", "Nio",
        "XPeng", "GreatWall", "Haval", "Aiways", "Hongqi", "LynkAndCo",
        "Roewe", "Wuling", "Baojun", "Zeekr", "Tata", "Mahindra",
        "MarutiSuzuki", "AshokLeyland", "Proton", "Perodua", "Tofas", "TOGG",
        "Lada", "UAZ", "GAZ", "Moskvitch", "Holden", "Troller", "IKA",
        "Bugatti", "DeTomaso", "Fisker", "Lucid", "Polestar", "Canoo",
        "Rivian", "Bollinger", "FaradayFuture", "Aptera", "Scania", "MAN",
        "Kamaz", "Isuzu", "Hino"
    };

    private readonly string[] VehicleTypes = new[]
    {
        "Car", "Truck", "Motorcycle", "Bus", "Scooter", "Bicycle"
    };

    private readonly string[] VehiclePropulsionTypes = new[]
    {
        "Gasoline", "Diesel", "Electric", "Hybrid", "Lpg", "NaturalGas",
        "Hydrogen"
    };

    [Inject] private HttpClient Http { get; set; } = default!;

    private async Task RegisterUser()
    {
        isSubmitting = true;
        successMessage = null;
        var response = await Http.PostAsJsonAsync("api/Registration", _model);

        if (response.IsSuccessStatusCode)
        {
            successMessage = "Registration successful!";
            _model = new RegisterWithVehicleRequest();
        }

        isSubmitting = false;
    }

    private async Task RegisterCompany()
    {
        isSubmitting = true;
        successMessage = null;
        var request = new RegisterCompanyRequest
        {
            Email = _companyModel.Email,
            Password = _companyModel.Password,
            CompanyName = _companyModel.CompanyName,
            Ico = _companyModel.Ico,
            Dic = _companyModel.Dic,
            ContactPersonName = _companyModel.ContactPersonName,
            ContactEmail = _companyModel.ContactEmail,
            PhoneNumber = _companyModel.PhoneNumber,
            BillingAddress = _companyModel.BillingAddress,
            LicensePlate = _companyModel.LicensePlate,
            Brand = _companyModel.Brand,
            Type = _companyModel.Type,
            PropulsionType = _companyModel.PropulsionType,
            Shareable = _companyModel.Shareable
        };

        var response = await Http.PostAsJsonAsync("api/Registration/company", request);

        if (response.IsSuccessStatusCode)
        {
            successMessage = "Registration successful!";
            _companyModel = new RegisterCompanyFormModel();
        }

        isSubmitting = false;
    }

    public class RegisterWithVehicleRequest
    {
        [Required, EmailAddress]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;

        [Required, Compare(nameof(Password))]
        public string ConfirmPassword { get; set; } = string.Empty;

        [Required]
        public string FirstName { get; set; } = string.Empty;

        [Required]
        public string LastName { get; set; } = string.Empty;

        [Required]
        public DateOnly? DateOfBirth { get; set; }

        [Required, Phone]
        public string PhoneNumber { get; set; } = string.Empty;

        [Required]
        public string Address { get; set; } = string.Empty;

        [Required]
        public string LicensePlate { get; set; } = string.Empty;

        [Required]
        public string Brand { get; set; } = string.Empty;

        [Required]
        public string Type { get; set; } = string.Empty;

        [Required]
        public string PropulsionType { get; set; } = string.Empty;

        public bool Shareable { get; set; }
    }

    public class RegisterCompanyFormModel
    {
        [Required, EmailAddress]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;

        [Required, Compare(nameof(Password))]
        public string ConfirmPassword { get; set; } = string.Empty;

        [Required]
        public string CompanyName { get; set; } = string.Empty;

        [Required]
        public string Ico { get; set; } = string.Empty;

        public string Dic { get; set; } = string.Empty;

        [Required]
        public string ContactPersonName { get; set; } = string.Empty;

        [Required, EmailAddress]
        public string ContactEmail { get; set; } = string.Empty;

        [Required, Phone]
        public string PhoneNumber { get; set; } = string.Empty;

        [Required]
        public string BillingAddress { get; set; } = string.Empty;

        [Required]
        public string LicensePlate { get; set; } = string.Empty;

        [Required]
        public string Brand { get; set; } = string.Empty;

        [Required]
        public string Type { get; set; } = string.Empty;

        [Required]
        public string PropulsionType { get; set; } = string.Empty;

        public bool Shareable { get; set; }
    }

    private class RegisterCompanyRequest
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public string CompanyName { get; set; } = string.Empty;
        public string Ico { get; set; } = string.Empty;
        public string Dic { get; set; } = string.Empty;
        public string ContactPersonName { get; set; } = string.Empty;
        public string ContactEmail { get; set; } = string.Empty;
        public string PhoneNumber { get; set; } = string.Empty;
        public string BillingAddress { get; set; } = string.Empty;
        public string LicensePlate { get; set; } = string.Empty;
        public string Brand { get; set; } = string.Empty;
        public string Type { get; set; } = string.Empty;
        public string PropulsionType { get; set; } = string.Empty;
        public bool Shareable { get; set; }
    }
}
