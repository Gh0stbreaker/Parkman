@page "/register"
@using System.Net.Http.Json
@using System.ComponentModel.DataAnnotations

<h3 class="text-2xl font-bold mb-4 text-center text-headline">Register</h3>

<EditForm Model="_model" OnValidSubmit="RegisterUser" class="max-w-3xl mx-auto bg-main p-6 rounded-xl shadow-md">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- Úèetní údaje -->
    <h4 class="text-xl font-semibold mt-6 mb-4 text-headline border-b border-muted pb-1">Account Information</h4>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-envelope mr-1"></i>
                Email
            </label>
            <InputText @bind-Value="_model.Email" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.Email)" class="text-red-500 text-sm mt-1" />
        </div>

        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-lock mr-1"></i>
                Password
            </label>
            <div class="flex items-center">
                <InputText @bind-Value="_model.Password" type="@(showPassword ? "text" : "password")" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
                <button type="button" class="ml-2 text-sm text-paragraph" @onclick="() => showPassword = !showPassword">@(showPassword ? "Hide" : "Show")</button>
            </div>
            <ValidationMessage For="@(() => _model.Password)" class="text-red-500 text-sm mt-1" />
        </div>

        <div class="md:col-span-2">
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-lock mr-1"></i>
                Confirm Password
            </label>
            <InputText @bind-Value="_model.ConfirmPassword" type="@(showPassword ? "text" : "password")" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.ConfirmPassword)" class="text-red-500 text-sm mt-1" />
        </div>
    </div>

    <!-- Osobní údaje -->
    <h4 class="text-xl font-semibold mt-6 mb-4 text-headline border-b border-muted pb-1">Personal Details</h4>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-user mr-1"></i>
                First Name
            </label>
            <InputText @bind-Value="_model.FirstName" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.FirstName)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-user mr-1"></i>
                Last Name
            </label>
            <InputText @bind-Value="_model.LastName" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.LastName)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-calendar-alt mr-1"></i>
                Date of Birth
            </label>
            <InputDate @bind-Value="_model.DateOfBirth" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.DateOfBirth)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-phone mr-1"></i>
                Phone Number
            </label>
            <InputText @bind-Value="_model.PhoneNumber" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.PhoneNumber)" class="text-red-500 text-sm mt-1" />
        </div>
        <div class="md:col-span-2">
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-home mr-1"></i>
                Address
            </label>
            <InputText @bind-Value="_model.Address" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.Address)" class="text-red-500 text-sm mt-1" />
        </div>
    </div>

    <!-- Vozidlo -->
    <h4 class="text-xl font-semibold mt-6 mb-4 text-headline border-b border-muted pb-1">Vehicle Information</h4>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-car mr-1"></i>
                License Plate
            </label>
            <InputText @bind-Value="_model.LicensePlate" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.LicensePlate)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-car-side mr-1"></i>
                Brand
            </label>
            <InputText @bind-Value="_model.Brand" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.Brand)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-tag mr-1"></i>
                Type
            </label>
            <InputText @bind-Value="_model.Type" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.Type)" class="text-red-500 text-sm mt-1" />
        </div>
        <div>
            <label class="block text-sm font-medium text-headline">
                <i class="fas fa-gas-pump mr-1"></i>
                Propulsion Type
            </label>
            <InputText @bind-Value="_model.PropulsionType" class="mt-1 block w-full rounded-md border border-stroke shadow-sm focus-visible:ring-2 focus-visible:ring-highlight focus:outline-none" />
            <ValidationMessage For="@(() => _model.PropulsionType)" class="text-red-500 text-sm mt-1" />
        </div>
    </div>

    <!-- Shareable -->
    <div class="flex items-center mt-6 mb-6">
        <InputCheckbox @bind-Value="_model.Shareable" class="h-4 w-4 text-highlight border-stroke rounded" />
        <label class="ml-2 block text-sm text-headline">Shareable</label>
    </div>

    <!-- Submit -->
    <button type="submit" class="w-full bg-highlight text-white font-semibold py-2 px-4 rounded-lg shadow-md hover:bg-tertiary transition duration-200 disabled:opacity-50" disabled="@isSubmitting">
        @(isSubmitting ? "Registering..." : "Register")
    </button>

    @if (successMessage != null)
    {
        <p class="text-green-600 text-center mt-4">@successMessage</p>
    }
</EditForm>

@code {
    private RegisterWithVehicleRequest _model = new();
    private bool showPassword;
    private bool isSubmitting;
    private string? successMessage;

    [Inject] private HttpClient Http { get; set; } = default!;

    private async Task RegisterUser()
    {
        isSubmitting = true;
        successMessage = null;
        var response = await Http.PostAsJsonAsync("api/Registration", _model);

        if (response.IsSuccessStatusCode)
        {
            successMessage = "Registration successful!";
            _model = new RegisterWithVehicleRequest();
        }

        isSubmitting = false;
    }

    public class RegisterWithVehicleRequest
    {
        [Required, EmailAddress]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;

        [Required, Compare(nameof(Password))]
        public string ConfirmPassword { get; set; } = string.Empty;

        [Required]
        public string FirstName { get; set; } = string.Empty;

        [Required]
        public string LastName { get; set; } = string.Empty;

        [Required]
        public DateOnly? DateOfBirth { get; set; }

        [Required, Phone]
        public string PhoneNumber { get; set; } = string.Empty;

        [Required]
        public string Address { get; set; } = string.Empty;

        [Required]
        public string LicensePlate { get; set; } = string.Empty;

        [Required]
        public string Brand { get; set; } = string.Empty;

        [Required]
        public string Type { get; set; } = string.Empty;

        [Required]
        public string PropulsionType { get; set; } = string.Empty;

        public bool Shareable { get; set; }
    }
}
