@page "/register"
@using Blazorise
@using Microsoft.AspNetCore.Components.Forms
@inject Parkman.Frontend.ViewModels.RegisterViewModel VM

<div class="container py-4 position-relative">
    <h3 class="text-center mb-4 h4">Create an account</h3>

    <ul class="nav nav-pills justify-content-center mb-4">
        <li class="nav-item">
            <button type="button" class="nav-link @(VM.RegisterAsCompany ? string.Empty : "active")" @onclick="() => VM.RegisterAsCompany = false">
                <i class="bi bi-person-fill me-1"></i>Person
            </button>
        </li>
        <li class="nav-item">
            <button type="button" class="nav-link @(VM.RegisterAsCompany ? "active" : string.Empty)" @onclick="() => VM.RegisterAsCompany = true">
                <i class="bi bi-building me-1"></i>Company
            </button>
        </li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane fade @(VM.RegisterAsCompany ? string.Empty : "show active")">
            <EditForm EditContext="VM.UserEditContext" OnValidSubmit="VM.RegisterUserAsync" class="card p-4 mx-auto" style="max-width: 768px;">
                <DataAnnotationsValidator />
                <Forms.ValidationSummary />

                <h5 class="mb-3">Account Information</h5>
                <div class="form-grid mb-3">
                    <div>
                        <label class="form-label">
                            <i class="bi bi-envelope me-1"></i>
                            Email
                        </label>
                        <InputText @bind-Value="VM.UserModel.Email" class="form-control" />
                        <ValidationMessage For="@(() => VM.UserModel.Email)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-lock me-1"></i>
                            Password
                        </label>
                        <div class="input-group">
                            <InputText @bind-Value="VM.UserModel.Password" type="@(VM.ShowPassword ? "text" : "password")" class="form-control" />
                            <button type="button" class="btn btn-outline-secondary" @onclick="() => VM.ShowPassword = !VM.ShowPassword">@(VM.ShowPassword ? "Hide" : "Show")</button>
                        </div>
                        <ValidationMessage For="@(() => VM.UserModel.Password)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-lock-fill me-1"></i>
                            Confirm Password
                        </label>
                        <InputText @bind-Value="VM.UserModel.ConfirmPassword" type="@(VM.ShowPassword ? "text" : "password")" class="form-control" />
                        <ValidationMessage For="@(() => VM.UserModel.ConfirmPassword)" class="text-danger small mt-1" />
                    </div>
                </div>

                <h5 class="mb-3">Personal Details</h5>
                <div class="form-grid mb-3">
                    <div>
                        <label class="form-label">
                            <i class="bi bi-person me-1"></i>
                            First Name
                        </label>
                        <InputText @bind-Value="VM.UserModel.FirstName" class="form-control" />
                        <ValidationMessage For="@(() => VM.UserModel.FirstName)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-person me-1"></i>
                            Last Name
                        </label>
                        <InputText @bind-Value="VM.UserModel.LastName" class="form-control" />
                        <ValidationMessage For="@(() => VM.UserModel.LastName)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-calendar me-1"></i>
                            Date of Birth
                        </label>
                        <InputDate @bind-Value="VM.UserModel.DateOfBirth" class="form-control" />
                        <ValidationMessage For="@(() => VM.UserModel.DateOfBirth)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-telephone me-1"></i>
                            Phone Number
                        </label>
                        <InputText @bind-Value="VM.UserModel.PhoneNumber" class="form-control" />
                        <ValidationMessage For="@(() => VM.UserModel.PhoneNumber)" class="text-danger small mt-1" />
                    </div>
                    <div class="span-2">
                        <label class="form-label">
                            <i class="bi bi-geo-alt me-1"></i>
                            Address
                        </label>
                        <InputText @bind-Value="VM.UserModel.Address" class="form-control" />
                        <ValidationMessage For="@(() => VM.UserModel.Address)" class="text-danger small mt-1" />
                    </div>
                </div>

                <h5 class="mb-3">Vehicle Information</h5>
                <ul class="nav nav-pills justify-content-center mb-3">
                    <li class="nav-item">
                        <button type="button" class="nav-link @(VM.RegisterCompanyVehicle ? string.Empty : "active")" @onclick="() => VM.RegisterCompanyVehicle = false">
                            Personal Vehicle
                        </button>
                    </li>
                    <li class="nav-item">
                        <button type="button" class="nav-link @(VM.RegisterCompanyVehicle ? "active" : string.Empty)" @onclick="() => VM.RegisterCompanyVehicle = true">
                            Company Vehicle
                        </button>
                    </li>
                </ul>
                <div class="form-grid mb-3">
                    <div>
                        <label class="form-label">
                            <i class="bi bi-card-text me-1"></i>
                            License Plate
                        </label>
                        <InputText @bind-Value="VM.UserModel.LicensePlate" class="form-control" />
                        <ValidationMessage For="@(() => VM.UserModel.LicensePlate)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-truck-front me-1"></i>
                            Brand
                        </label>
                        <InputSelect @bind-Value="VM.UserModel.Brand" class="form-select">
                            <option value="">Select brand</option>
                            @foreach (var brand in VehicleBrands)
                            {
                                <option value="@brand">@brand</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => VM.UserModel.Brand)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-gear me-1"></i>
                            Type
                        </label>
                        <InputSelect @bind-Value="VM.UserModel.Type" class="form-select">
                            <option value="">Select type</option>
                            @foreach (var type in VehicleTypes)
                            {
                                <option value="@type">@type</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => VM.UserModel.Type)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-fuel-pump me-1"></i>
                            Propulsion Type
                        </label>
                        <InputSelect @bind-Value="VM.UserModel.PropulsionType" class="form-select">
                            <option value="">Select propulsion</option>
                            @foreach (var propulsion in VehiclePropulsionTypes)
                            {
                                <option value="@propulsion">@propulsion</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => VM.UserModel.PropulsionType)" class="text-danger small mt-1" />
                    </div>
                    @if (VM.RegisterCompanyVehicle)
                    {
                        <div>
                            <label class="form-label">
                                <i class="bi bi-envelope me-1"></i>
                                Company Email
                            </label>
                            <InputText @bind-Value="VM.UserModel.CompanyEmail" class="form-control" />
                            <ValidationMessage For="@(() => VM.UserModel.CompanyEmail)" class="text-danger small mt-1" />
                        </div>
                        <div>
                            <label class="form-label">
                                <i class="bi bi-key me-1"></i>
                                Pairing Password
                            </label>
                            <InputText @bind-Value="VM.UserModel.PairingPassword" class="form-control" />
                            <ValidationMessage For="@(() => VM.UserModel.PairingPassword)" class="text-danger small mt-1" />
                        </div>
                    }
                </div>

                <div class="form-check mb-3">
                    <InputCheckbox @bind-Value="VM.UserModel.Shareable" class="form-check-input" />
                    <label class="form-check-label">Shareable</label>
                </div>

                <button type="submit" class="btn btn-primary w-100" disabled="@VM.IsSubmitting">
                    @(VM.IsSubmitting ? "Registering..." : "Register")
                </button>
            </EditForm>
        </div>

        <div class="tab-pane fade @(VM.RegisterAsCompany ? "show active" : string.Empty)">
            <EditForm EditContext="VM.CompanyEditContext" OnValidSubmit="VM.RegisterCompanyAsync" class="card p-4 mx-auto" style="max-width: 768px;">
                <DataAnnotationsValidator />
                <Forms.ValidationSummary />

                <h5 class="mb-3">Account Information</h5>
                <div class="form-grid mb-3">
                    <div>
                        <label class="form-label">
                            <i class="bi bi-envelope me-1"></i>
                            Email
                        </label>
                        <InputText @bind-Value="VM.CompanyModel.Email" class="form-control" />
                        <ValidationMessage For="@(() => VM.CompanyModel.Email)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-lock me-1"></i>
                            Password
                        </label>
                        <div class="input-group">
                            <InputText @bind-Value="VM.CompanyModel.Password" type="@(VM.ShowPassword ? "text" : "password")" class="form-control" />
                            <button type="button" class="btn btn-outline-secondary" @onclick="() => VM.ShowPassword = !VM.ShowPassword">@(VM.ShowPassword ? "Hide" : "Show")</button>
                        </div>
                        <ValidationMessage For="@(() => VM.CompanyModel.Password)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-lock-fill me-1"></i>
                            Confirm Password
                        </label>
                        <InputText @bind-Value="VM.CompanyModel.ConfirmPassword" type="@(VM.ShowPassword ? "text" : "password")" class="form-control" />
                        <ValidationMessage For="@(() => VM.CompanyModel.ConfirmPassword)" class="text-danger small mt-1" />
                    </div>
                </div>

                <h5 class="mb-3">Company Details</h5>
                <div class="form-grid mb-3">
                    <div>
                        <label class="form-label">
                            <i class="bi bi-building me-1"></i>
                            Company Name
                        </label>
                        <InputText @bind-Value="VM.CompanyModel.CompanyName" class="form-control" />
                        <ValidationMessage For="@(() => VM.CompanyModel.CompanyName)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-123 me-1"></i>
                            IČO
                        </label>
                        <InputText @bind-Value="VM.CompanyModel.Ico" class="form-control" />
                        <ValidationMessage For="@(() => VM.CompanyModel.Ico)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-123 me-1"></i>
                            DIČ
                        </label>
                        <InputText @bind-Value="VM.CompanyModel.Dic" class="form-control" />
                        <ValidationMessage For="@(() => VM.CompanyModel.Dic)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-person-lines-fill me-1"></i>
                            Contact Name
                        </label>
                        <InputText @bind-Value="VM.CompanyModel.ContactPersonName" class="form-control" />
                        <ValidationMessage For="@(() => VM.CompanyModel.ContactPersonName)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-envelope me-1"></i>
                            Contact Email
                        </label>
                        <InputText @bind-Value="VM.CompanyModel.ContactEmail" class="form-control" />
                        <ValidationMessage For="@(() => VM.CompanyModel.ContactEmail)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-telephone me-1"></i>
                            Phone Number
                        </label>
                        <InputText @bind-Value="VM.CompanyModel.PhoneNumber" class="form-control" />
                        <ValidationMessage For="@(() => VM.CompanyModel.PhoneNumber)" class="text-danger small mt-1" />
                    </div>
                    <div class="span-2">
                        <label class="form-label">
                            <i class="bi bi-geo-alt me-1"></i>
                            Billing Address
                        </label>
                        <InputText @bind-Value="VM.CompanyModel.BillingAddress" class="form-control" />
                        <ValidationMessage For="@(() => VM.CompanyModel.BillingAddress)" class="text-danger small mt-1" />
                    </div>
                </div>

                <h5 class="mb-3">Vehicle Information</h5>
                <div class="form-grid mb-3">
                    <div>
                        <label class="form-label">
                            <i class="bi bi-card-text me-1"></i>
                            License Plate
                        </label>
                        <InputText @bind-Value="VM.CompanyModel.LicensePlate" class="form-control" />
                        <ValidationMessage For="@(() => VM.CompanyModel.LicensePlate)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-truck-front me-1"></i>
                            Brand
                        </label>
                        <InputSelect @bind-Value="VM.CompanyModel.Brand" class="form-select">
                            <option value="">Select brand</option>
                            @foreach (var brand in VehicleBrands)
                            {
                                <option value="@brand">@brand</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => VM.CompanyModel.Brand)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-gear me-1"></i>
                            Type
                        </label>
                        <InputSelect @bind-Value="VM.CompanyModel.Type" class="form-select">
                            <option value="">Select type</option>
                            @foreach (var type in VehicleTypes)
                            {
                                <option value="@type">@type</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => VM.CompanyModel.Type)" class="text-danger small mt-1" />
                    </div>
                    <div>
                        <label class="form-label">
                            <i class="bi bi-fuel-pump me-1"></i>
                            Propulsion Type
                        </label>
                        <InputSelect @bind-Value="VM.CompanyModel.PropulsionType" class="form-select">
                            <option value="">Select propulsion</option>
                            @foreach (var propulsion in VehiclePropulsionTypes)
                            {
                                <option value="@propulsion">@propulsion</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => VM.CompanyModel.PropulsionType)" class="text-danger small mt-1" />
                    </div>
                </div>

                <div class="form-check mb-3">
                    <InputCheckbox @bind-Value="VM.CompanyModel.Shareable" class="form-check-input" />
                    <label class="form-check-label">Shareable</label>
                </div>

                <button type="submit" class="btn btn-primary w-100" disabled="@VM.IsSubmitting">
                    @(VM.IsSubmitting ? "Registering..." : "Register")
                </button>
            </EditForm>
        </div>
    </div>

    <Modal @bind-Visible="VM.ShowSuccessModal" Animation="Animation.Fade" Backdrop="true">
        <ModalContent>
            <ModalHeader>
                <ModalTitle>Registration</ModalTitle>
                <CloseButton @onclick="() => VM.ShowSuccessModal = false" />
            </ModalHeader>
            <ModalBody>
                @VM.SuccessMessage
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Primary" @onclick="() => VM.ShowSuccessModal = false">OK</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
</div>

